<page xmlns="http://projectmallard.org/1.0/"
      type="topic" style="spec spec-no-comparison"
      id="if_choose">

<info>
  <revision docversion="1.0" date="2015-03-28" status="final"/>

  <link type="guide" xref="index" group="choose"/>

  <credit type="author copyright">
    <name>Shaun McCance</name>
    <email>shaunm@gnome.org</email>
    <years>2011, 2012</years>
  </credit>

  <desc>Provide a list of alternative content.</desc>

  <include href="../../cc-by-sa-3-0.xml" xmlns="http://www.w3.org/2001/XInclude" />
</info>

<title>The <code>if:choose</code> Element</title>

<p>The <code>if:choose</code> element, together with the
<code xref="if_when">if:when</code> and <code xref="if_else">if:else</code>
elements, provides branching and fallback capabilities for conditional
processing. Use the <code>if:choose</code> element if you need to select
only one from a number of conditions, or if you need to provide fallback
content only when conditions are not met.</p>

<p>The <code>if:choose</code> and <code>if:when</code> elements also allow
you to hide conditional content from processing tools that don't support
conditional processing. See <link xref="fallback"/> for details.</p>


<!-- BEGIN notes -->
<section id="notes">
<title>Notes</title>
<list>
  <item><p>The <code>if:choose</code> element contains one or more
  <code xref="if_when">if:when</code> elements, optionally followed by
  <link xref="/1.0/mal_block" href="http://projectmallard.org/1.0/mal_block.html">general
  block content</link> or an <code xref="if_else">if:else</code> element.</p></item>

  <item><p>The <code>if:choose</code> element can occur in any general block context.</p></item>

  <item><p>At most one child <code>if:when</code> element is displayed, or the
  fallback block content or <code>if:else</code> element is displayed.</p></item>

  <item><p>The <code>style</code> attribute takes a space-separated list of
  style hints.  Processing tools should adjust their behavior according to
  those style hints they understand.</p></item>

  <item><p>The <code>if:choose</code> element can have attributes from external
  namespaces.  See <link xref="/1.0/mal_external"
  href="http://projectmallard.org/1.0/mal_external.html">External Namespaces</link>
  for more information on external-namespace attributes.</p></item>
</list>
</section>
<!-- END notes -->


<!-- BEGIN examples -->
<section id="examples">
<title>Examples</title>

<p>Output only one of a group of conditionals:</p>

<example>
<code mime="application/xml"><![CDATA[
<if:choose>
  <if:when test="target:xhtml">
    <p>This is only output to XHTML.</p>
  </if:when>
  <if:when test="target:html">
    <p>This is only output to HTML.</p>
  </if:when>
  <if:when test="target:pdf">
    <p>This is only output to PDF.</p>
  </if:when>
</if:choose>
]]></code>
</example>

<p>Output one thing when showing content for Android-based systems, and
something else otherwise:</p>

<example>
<code mime="application/xml"><![CDATA[
<if:choose>
  <if:when test="platform:android">
    <p>This is output for Android.</p>
  </if:when>
  <if:else>
    <p>This is output otherwise.</p>
  </if:else>
</if:choose>
]]></code>
</example>

<p>Do the exact same as above, but with differnt <link xref="fallback">fallback
behavior</link> when processed with tools that do not support conditionals.</p>

<example>
<code mime="application/xml"><![CDATA[
<if:choose>
  <if:when test="platform:android">
    <p>This is output for Android.</p>
  </if:when>
  <p>This is output otherwise.</p>
</if:choose>
]]></code>
<p>This is output otherwise.</p>
</example>

<p>See <link xref="if_attr_test#examples"/> on the page <link xref="if_attr_test"/>
for examples of more complicated test expressions.</p>
</section>
<!-- END examples -->


<!-- BEGIN processing -->
<section id="processing">
<title>Processing Expectations</title>

<p>The <code>if:choose</code> element is a branching element. At most one of
its child <code>if:when</code> elements is displayed, or else fallback content
is displayed. A processing tool evaluates each child <code>if:when</code> in turn,
evaluating its <code xref="if_attr_test">test</code> attribute. Once an <code>if:when</code>
element is found whose <code>test</code> attribute evaluates to true, its contents are
processed in block mode, and further processing of the <code>if:choose</code>
element stops.</p>

<p>If no child <code>if:when</code> element is displayed, the fallback content
is displayed. The fallback content is any block content that is a direct child
of the <code>if:choose</code> element, plus any block content contained in a
child <code>if:else</code> element, all processed in document order. Both are
allowed, because they have different fallback behavior in tools that don't
support conditional processing. See <link xref="fallback"/> for details.</p>
</section>
<!-- END processing -->


<!-- BEGIN schema -->
<section id="schema">
<title>Schema</title>

<p>The formal definition of the Mallard Conditionals extension
is maintained in <link href="http://www.relaxng.org/">RELAX NG</link>
<link href="http://www.relaxng.org/compact-20021121.html">Compact Syntax</link>
in code blocks within this specification. This is the formal definition
for the <code>if:choose</code> element. The namespace declarations for this
definition are on the page <link xref="index"/>.</p>

<synopsis><code mime="application/relax-ng-compact-syntax">
if_choose = element if:choose {
  if_choose_attr,
  <link xref="if_when">if_when</link> +,
  ( <link xref="if_else">if_else</link> |
    <link xref="/1.0/mal_block" href="http://projectmallard.org/1.0/mal_block.html">mal_block</link> * ) ?
}
if_choose_attr = (
  attribute style { xsd:NMTOKENS } ?,
  <link xref="/1.0/mal_external" href="http://projectmallard.org/1.0/mal_external.html">mal_attr_external</link> *
)
<link xref="/1.0/mal_block" href="http://projectmallard.org/1.0/mal_block.html">mal_block_elements</link> |= if_choose
</code></synopsis>
</section>
<!-- END schema -->

</page>

<page xmlns="http://projectmallard.org/1.0/"
      xmlns:e="http://projectmallard.org/experimental/"
      type="topic"
      id="tenminutes">

<info>
  <link type="guide" xref="learn" group="primary"/>

  <revision version="0.1" date="2009-06-16" status="incomplete"/>

  <credit type="author">
    <name>Shaun McCance</name>
    <email>shaunm@gnome.org</email>
    <years>2008-2009</years>
  </credit>

  <desc>Create a multiple-page document in only ten minutes.</desc>
</info>

<title>Ten Minute Tour</title>

<comment>
  <cite date="2009-06-16">shaunm</cite>
  <p>This is draft material.  I'm not happy with the tone yet.</p>
</comment>


<p>In this tutorial, you will learn how to create a simple multiple-page
Mallard document by creating a document for the fictitious <app>Beanstalk</app>
application.  This tutorial assumes you have a basic familiarity with XML or
with a similiar markup language like HTML.</p>

<p>A Mallard document is composed of multiple independent pages. Each page is
kept in a separate file, and a processing tool aggregates them together,
automatically creating links and navigational aids. There are two primary
types of pages: <link xref="/1.0/mallard-1.0/mal_page#topic">topic pages</link>
and <link xref="/1.0/mallard-1.0/mal_page#guide">guide pages</link>. Topic
pages present some piece of information to the reader. This might be a
tutorial, a conceptual overview, reference material, or any other type
of content. Guide pages serve as the navigational glue between topics,
helping readers find and explore content.</p>

<section>
<title>First Page</title>

<p>Begin making a Mallard document by writing the front page in any text editor.
Generally, the front page of any document will be a guide page, as its purpose
is to help users navigate to other content. In Mallard, the front page of any
document is always named <file>index.page</file>.</p>

<listing>
  <title><file>index.page</file></title>
  <code><![CDATA[
<page xmlns="http://projectmallard.org/1.0/"
      type="guide"
      id="index">
<title>Beanstalk Help</title>
</page>]]></code>
</listing>

<p>This simple example is a valid Mallard guide page. Taken alone, it is also
a valid Mallard document.</p>

<p>The entire contents of the page are between the opening <code>&lt;page></code>
and closing <code>&lt;/page></code> tags.  As with all XML formats, every element
must either have opening and closing tags or use the special empty tag syntax.
We'll see the empty tag below with link elements.</p>

<p>There are three attributes on the <code>page</code> element.  The
<code>xmlns</code> attribute specifies that the XML tags in this file are from
the <link xref="/1.0/index">Mallard 1.0 namespace</link>.  This must be set on
all Mallard pages.  The <code>id</code> attribute provides a unique identifier
that other pages can use to link to this page.  You should match the <code>id</code>
attribute to the name of the file without the <file>.page</file> extension.</p>

<p>Finally, the <code>type</code> attribute specifies that this is a guide page.
Guide pages get special treatment in Mallard documents.  They're displayed with
additional links to topic pages and other guide pages, based on metadata that
is provided on this page or on other pages.  The linking structure for guide
pages is unique to Mallard, and we will explore it further below.</p>

<comment><p>Explain what the pieces here mean.  One para.</p></comment>
</section>

<section>
<title>View Your Doucment</title>

<p>Right now, you have a simple document, but you can only view the raw markup
in a text editor.  To view formatted output, you'll need to hand your document
to a Mallard processing tool.</p>

<p>Mallard is just the markup language, along with instructions on how it should
be handled.  Anybody can write tools to display a Mallard document or convert it
into another format.</p>

<p>For the purpose of this tutorial, we'll assume you have the Gnome help viewer
<app>Yelp</app> installed.  You can view this document by calling <cmd>yelp</cmd>
from the command line and passing it the full path to the directory containing
the page files.  For example, if you have placed <file>index.page</file> in
<file>/home/drake/mydocument/</file>, enter this at the command line:</p>

<screen>yelp /home/drake/mydocument/</screen>
</section>

<section>
<title>Another Page</title>

<p>Unless you're creating a simple set of instructions for a friend or
colleague, you probably want to have multiple pages in your document.
Add another page to the document by creating a new page file:</p>

<listing>
  <title><file>planting.page</file></title>
  <code><![CDATA[
<page xmlns="http://projectmallard.org/1.0/"
      type="topic"
      id="planting">
<title>Planting Beans</title>
</page>]]></code>
</listing>

<p>Notice that the <code>type</code> attribute is <code>"guide"</code> in
<file>index.page</file> and <code>"topic"</code> in <file>planting.page</file>.
Since <file>index.page</file> is a guide page, it can have links inserted
automatically to other pages. In Mallard, guides don't have to specify which
pages they link to. Instead, pages can specify that guides should link to
them. Do this by adding a link element to <file>planting.page</file>:</p>

<listing>
  <title><file>planting.page</file></title>
  <code><![CDATA[
<page xmlns="http://projectmallard.org/1.0/"
      type="topic"
      id="planting">
]]><e:hi><![CDATA[<info>
  <link type="guide" xref="index"/>
</info>]]></e:hi><![CDATA[
<title>Planting Beans</title>
</page>]]></code>
</listing>
</section>

<section>
<title>Adding Content</title>

<p>Currently, there's no real content in <file>planting.page</file>.
You'll want to add content to explain to the user how to plant magic beans.
The following example shows a basic paragraph and a
<em xref="/1.0/mallard-1.0/mal_block_steps">steps list</em>.</p>

<listing>
  <title><file>planting.page</file></title>
  <code><![CDATA[
<page xmlns="http://projectmallard.org/1.0/"
      type="topic"
      id="planting">
<info>
  <link type="guide" xref="index"/>
</info>
<title>Planting Beans</title>]]><e:hi><![CDATA[
<p>By the end of this page, you will be able to plant your magic
beans and nurture them into a bean sprout.</p>
<steps>
  <item><p>Dig a hole 5cm deep.</p></item>
  <item><p>Place your magic beans in the hole.</p></item>
  <item><p>Fill the hole with clean dirt and pat it level.</p></item>
  <item><p>Water daily.</p></item>
</steps>]]></e:hi><![CDATA[
</page>]]></code>
</listing>
</section>

<comment>
  <cite date="2009-06-16">shaunm</cite>
  <p>Fill in more content.</p>
</comment>

</page>
